/* eslint-disable camelcase */
'use strict';

module.exports = {
    title: 'XR',
    description: 'XR编辑器相关组件和功能',
    xrui: 'XRUI',
    rendering_scale: '调整渲染分辨率比例',
    msaa: '调整多重采样抗锯齿参与计算的像素像素个数',
    node: {
        convert_main_camera_to_xr_hmd: '转为 XR HMD',
        xr_agent: 'XR Agent',
        xr_hmd: 'XR HMD',
        ray_interactor: 'Ray Interactor',
        direct_interactor: 'Direct Interactor',
        locomotion_checker: 'Locomotion Checker',
        teleportable: 'Teleportable',
        simple_interactable: 'Simple Interactable',
        grab_interactable: 'Grab Interactable',
        button: 'Button',
        editBox: 'EditBox',
        layout: 'Layout',
        pageView: 'PageView',
        progressBar: 'ProgressBar',
        richText: 'RichText',
        scrollView: 'ScrollView',
        slider: 'Slider',
        toggle: 'Toggle',
        toggleGroup: 'ToggleGroup',
        videoPlayer: 'VideoPlayer',
        webView: 'WebView',
        widget: 'Widget',
        sprite: 'Sprite',
        label: 'Label',
    },
    hmd_ctrl: {
        perEyeCamera: '是否开启单独的左右眼节点',
        syncWithMainCamera: '左右眼节点设置是否同步主相机',
        IPDOffset: '左右眼瞳距设置',
        offsetValue: '瞳距值',
    },
    pose_tracker: {
        trackingSource: '指定需要追踪的物理设备',
        trackingType: '设备追踪方式，生效的追踪变量',
    },
    target_eye: {
        targetEye: '渲染目标相机',
    },
    tracking_origin: {
        offsetObject: '指定需要偏移的节点',
        trackingOriginMode: '追踪偏移方式',
        yOffsetValue: '节点Y轴方向的偏移量',
    },
    xr_controller: {
        inputDevice: '物理输入设备的绑定',
        selectActionLeft: '选择状态的输入按键绑定(左)',
        activateActionLeft: '激活状态的输入按键绑定(左)',
        UIPressActionLeft: 'UI触发的按键绑定(左)',
        selectActionRight: '选择状态的输入按键绑定(右)',
        activateActionRight: '选择状态的输入按键绑定(右)',
        UIPressActionRight: '选择状态的输入按键绑定(右)',
        axisToPressThreshold: '行为触发的最小阈值',
        model: '绑定Controller的可视化模型',
    },
    xr_interactive_simulator: {
        xrAgent: '绑定XR Agent,默认绑定遍历当前场景得到的第一个XR Agent',
    },
    interactable_events: {
        hoverEnterEvents: '悬停开始事件',
        hoverStayEvents: '悬停持续事件',
        hoverExitEvents: '悬停结束事件',
        selectEnterEvents: '选择开始事件',
        selectStayEvents: '选择持续事件',
        selectExitEvents: '选择结束事件',
        activeEnterEvents: '激活开始事件',
        activeStayEvents: '激活持续事件',
        activeExitEvents: '激活结束事件',
    },
    interactor_events: {
        audioEvents: '音频触发事件',
        hapticEvents: '触觉触发事件',
        interactorEvents: '交互事件',
        audio_events: {
            onSelectEntered: '是否开启选择开始事件的触发音频',
            onSelectEnteredAudioClip: '选择开始事件的触发音频',
            onSelectStay: '是否开启选择持续事件的触发音频',
            onSelectStayAudioClip: '选择持续事件的触发音频',
            onSelectExited: '是否开启选择结束事件的触发音频',
            onSelectExitedAudioClip: '选择结束事件的触发音频',
            onHoverEntered: '是否开启悬停开始事件的触发音频',
            onHoverEnteredAudioClip: '悬停开始事件的触发音频',
            onHoverStay: '是否开启悬停持续事件的触发音频',
            onHoverStayAudioClip: '悬停持续事件的触发音频',
            onHoverExited: '是否开启悬停结束事件的触发音频',
            onHoverExitedAudioClip: '悬停结束事件的触发音频',
            onHoverCanceled: '是否开启悬停取消事件的触发音频',
            onHoverCanceledAudioClip: '悬停取消事件的触发音频',
        },  
        sub_interactor_events: {
            hoverEnterEvents: '悬停开始事件',
            hoverStayEvents: '悬停持续事件',
            hoverExitEvents: '悬停结束事件',
            selectEnterEvents: '选择开始事件',
            selectStayEvents: '选择持续事件',
            selectExitEvents: '选择结束事件',
        },
    },
    xr_interactor: {
        attachTransform: '代替抓取的物体最终落到的位置，如果为空就用当前Interactor的位置',
        selectActionTrigger: '选择行为的触发机制',
    },
    ray_interactor: {
        forceGrab: '开启时被抓对象吸附到AttachTransform、关闭后抓取挂载在交互点的位置',
        rayOriginTransform: '发出Ray的起始位置，为空就默认是当前Interactor的位置',
        maxRayDistance: '射线最远投射距离',
        reticle: '射线光标',
    },
    xr_interactable: {
        rayReticle: '射线触碰到交互物时，接触点显示的提示物',
    },
    grab_interactable: {
        attachTransform: '用此AttachTransform的位置作为此物被抓取的位置，如果为空就用实际对象的位置(可能是被抓取物体的某一个位置点)',
        attachEaseInTime: '被抓取物体迁移过程消耗的时间',
        grabTrigger: '触发抓取的事件',
        hideController: '是否隐藏XR Controller对象模型,开启后隐藏XR Controller对象模型',
        throwOnDetach: '开启后，物体具有模拟抛出行为的物理属性',
        throwSimulationMode: '抛出时物体速度的计算方式',
        throwSmoothingDuration: '用于计算平均投掷速度的时间段',
        throwSmoothingCurve: '用于加权投掷速度平滑的曲线(右侧最近的帧)',
        throwVelocityScale: '在投掷时从交互器继承的速度的倍率',
        throwAngularVelocityScale: '在投掷时从交互器继承的角速度的倍率',
    },
    teleportable: {
        teleportableType: '传送地的传送类型，有传送点和传送区域两种形式',
        teleportAnchorNode: '当传送类型为传送点时开启此项，定义最终传送的固定位置',
        teleportTrigger: '触发传送的事件',
        teleporter: '能够传送至此的传送对象',
    },
    locomotion_base: {
        checker: '选择参与此运动行为检查的LocomotionChecker，如果用户没有指定，则默认绑定遍历当前Object组得到的第一个Locomotion Checker',
        inputDevice: '绑定需要读取信号的输入设备',
        inputControl: '绑定输入控件',
    },
    continuous_mover: {
        moveSpeed: '移动的速度',
        forwardSource: '指定为正向方向的对象',
    },
    continuous_turner: {
        turnSpeed: '转向的速度',
    },
    sharp_turner: {
        turnAngle: '每次固定的转向角度',
        enableTurnAround: '开启后允许按下摇杆时XR Agent旋转180度',
        activationTimeout: '执行连续的转弯时需要等待的时间',
    },
    locomotion_checker: {
        xrAgent: '绑定XR Agent,默认绑定遍历当前场景得到的第一个XR Agent',
    },
    teleporter: {
        checker: '选择特定Locomotion Checker,如果用户没有指定，则默认绑定遍历当前Object组得到的第一个Locomotion Checker',
    },
    camera_following: {
        camera: '选择UI需要跟随的摄像头',
    },
    raycast_checker: {
        ignoreReversedUI: '开启后不可以和反向的UI控件交互',
    },
    xr_key: {
        key: '虚拟键盘上按键的键值',
    },
    xr_keyboard_input_field: {
        suspendTransform: 'XR键盘悬浮位置',
        xRKeyboard: '选择想要引用的虚拟键盘对象(必须挂载cc.XRKeyboard)',
    },
    xr_keyboard: {
        disableUIInteractionWhenTyping: '是否禁用用户在输入时与其他UI元素的交互。使用这个选项来减少键盘被意外关闭的机会。',
        onCommitText: '提交输入文字事件的回调',
        onShowKeyboard: '显示XR键盘事件的回调',
        onHideKeyboard: '隐藏XR键盘事件的回调',
    },
    xr_switch: {
        switch_latin: '字母对应的键值',
        switch_symbol: '符号对应的键值',
        switch_math_symbol: '数字符号对应的键值',
    },
    document: {
        agree: '同意',
        disagree: '不同意',
    },
};
